{"version":3,"sources":["components/firebase.js","components/Header.js","App.js","components/signUpUser.js","components/login.js","components/DisplayUser.js","components/Post.js","components/UserPersonalProfile.js","components/MakeAPost.js","components/userPublicProfile.js","components/fetchAndDisplayUserData.js","components/FrontPage.js","components/GetAndDisplayFrontPageData.js","components/getDataForPersonalProfile.js","index.js"],"names":["current_user","is_user_logged_on","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","download_image","image_name","getDownloadURL","sRef","then","url","profile_picture","download_post_image","a","response","get__public_user_data","username","dbRef","ref","getDatabase","get","child","snapshot","exists","val","console","log","catch","error","get_all_posts_data","get_all_users_data","upload_file","file","file_name","storageRef","uploadBytes","return_current_user_data","check_if_user_is_logged_on","user_data","check_if_username_is_taken","undefined","db","getUsers","onValue","data","get_user_data","Sidebar","Header","Data","func","useState","count","setCount","setTimeout","navigate","useNavigate","Logout_user","window","location","reload","to_profile","to_create_new_post","to_front_page","to","alt","className","src","onClick","App","loginHeader","check_for_invalid_characters","string","includes","SignUpUser","setUsername","password","setPassword","Add_user_account","set","followers","boards","following","saved_posts","posts","profile_image","writeUserData","document","getElementById","placeholder","value","style","color","tyle","id","onChange","event","target","type","LoginUser","check_username_and_password","x","check_password","DisplayUser","image","setImage","Post","saveButtonText","setSaveButtonText","is_saved","save_or_unsave_post","post_name","post_list","Array","isArray","push","forEach","element","filter","update","unsave_post_to_user","save_post_to_user","useEffect","UserPersonalProfile","uploadUserImage","uploaded_image","files","Math","random","toString","substring","update_profile_image","user","UserImage","arrayRemove","arr","ele","reverse","name","accept","top","position","left","map","Element","MakeAPost","title","SetTitle","description","SetDescription","React","setFile","submitPost","addPostToUser","makeNewPost","right","URL","createObjectURL","e","UserPublicProfile","check_if_user","buttonText","setButtonText","follow_or_unfollow_user","following_name","Unfollow_user","following_data","remove_follower","following_user","add_follower","FetchAndDisplayUserData","user_to_display","updateData","allPosts","setAllPosts","allUsers","SetAllUsers","getData","FrontPage","all_posts","i","length","GetAndDisplayFrontPageData","GetDataForPersonalProfile","forceUpdate","Main","public_user","setPublicUser","change_public_user","path","render"],"mappings":"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","file":"static/js/main.e59f87e7.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getDatabase, set, onValue, update, ref, get, child} from \"firebase/database\";\nimport { getStorage, ref as sRef, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { profile_image } from \"./Header\";\n\n\nvar current_user = ''\n\nvar is_user_logged_on = false\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD1YY7MEswEl5aob1fLrF_3YRff_SeOF1U\",\n  authDomain: \"pinterest-clone-5a220.firebaseapp.com\",\n  databaseURL: \"https://pinterest-clone-5a220-default-rtdb.firebaseio.com\",\n  projectId: \"pinterest-clone-5a220\",\n  storageBucket: \"pinterest-clone-5a220.appspot.com\",\n  messagingSenderId: \"734695834748\",\n  appId: \"1:734695834748:web:5cfad6cda8b3ad600cf5f9\"\n};\n\n\n// eslint-disable-next-line\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage(app);\n\n\n\nfunction download_image(image_name) {\n  getDownloadURL(sRef(storage, image_name))\n  .then((url) => {\n    profile_image(url)\n  })\n}\n\n\nasync function download_post_image(image_name) {\n  let response = await getDownloadURL(sRef(storage, image_name))\n  return response;\n\n}\n\n\nasync function get__public_user_data(username) {  \n    const dbRef = ref(getDatabase());\n    var response = await get(child(dbRef, 'users/' + username)).then((snapshot) => {\n      if (snapshot.exists()) {\n        //console.log(snapshot.val());\n        return snapshot.val()\n\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch((error) => {\n      console.error(error);\n    });\n\n  return response\n  }\n\n\n\n  async function get_all_posts_data() {  \n    const dbRef = ref(getDatabase());\n    var response = await get(child(dbRef, 'posts/' )).then((snapshot) => {\n      if (snapshot.exists()) {\n        //console.log(snapshot.val());\n        return snapshot.val()\n\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch((error) => {\n      console.error(error);\n    });\n    \n  return response\n  }\n\n\n  async function get_all_users_data() {  \n    const dbRef = ref(getDatabase());\n    var response = await get(child(dbRef, 'users/' )).then((snapshot) => {\n      if (snapshot.exists()) {\n        //console.log(snapshot.val());\n        return snapshot.val()\n\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch((error) => {\n      console.error(error);\n    });\n    \n  return response\n  }\n\n\n\n\nfunction upload_file(file, file_name) {\n\n  const storageRef = sRef(storage, file_name);\n\n  uploadBytes(storageRef, file).then((snapshot) => {\n  //console.log('Uploaded a blob or file!');\n});\n}\n\n\nfunction update_profile_image(file_name) {\n  const db = getDatabase();\n  is_user_logged_on = true\n  update(ref(db, 'users/' +  current_user['username']), {\n    profile_image: file_name\n  });\n}\n\n\nfunction Logout_user_in_firebase() {\n  is_user_logged_on = false\n  current_user = ''\n  all_posts = []\n  user_data = ''\n}\n\n\n\n\nfunction following_user(following_name) {\n  const db = getDatabase();\n  is_user_logged_on = true\n  let post_list = []\n  let x = current_user['following']\n\n  if (Array.isArray(x) === false) {\n    post_list.push(following_name)\n  }\n  else {\n    post_list = []\n    x.forEach((element) => { post_list.push(element) } )\n    post_list.push(following_name)\n  }\n  update(ref(db, 'users/' +  current_user['username']), {\n      following: post_list\n  });\n} \n\n\nfunction Unfollow_user(following_name) {\n  const db = getDatabase();\n  is_user_logged_on = true\n  let post_list = []\n  let x = current_user['following']\n\n  if (Array.isArray(x) === false) {\n    post_list.push(following_name)\n  }\n  else {\n    post_list = []\n    x.forEach((element) => { post_list.push(element) } )\n    post_list.push(following_name)\n    post_list = post_list.filter(val => val !== following_name);\n    //console.log(post_list)\n\n  }\n  update(ref(db, 'users/' +  current_user['username']), {\n      following: post_list\n  });\n}\n\n\n\nfunction unsave_post_to_user(post_name) {\n  const db = getDatabase();\n  is_user_logged_on = true\n  let post_list = []\n  let x = current_user['saved_posts']\n\n  if (Array.isArray(x) === false) {\n    post_list.push(post_name)\n  }\n  else {\n    post_list = []\n    x.forEach((element) => { post_list.push(element) } )\n    post_list.push(post_name)\n    post_list = post_list.filter(val => val !== post_name);\n\n  }\n  update(ref(db, 'users/' +  current_user['username']), {\n      saved_posts: post_list\n  });\n} \n\nfunction save_post_to_user(post_name) {\n  const db = getDatabase();\n  is_user_logged_on = true\n  let post_list = []\n  let x = current_user['saved_posts']\n\n  if (Array.isArray(x) === false) {\n    post_list.push(post_name)\n  }\n  else {\n    post_list = []\n    x.forEach((element) => { post_list.push(element) } )\n    post_list.push(post_name)\n  }\n  update(ref(db, 'users/' +  current_user['username']), {\n      saved_posts: post_list\n  });\n} \n\n\n\nfunction add_follower(following_data) {\n  //console.log(\"here, adding follower\")\n  const db = getDatabase();\n  is_user_logged_on = true\n  let post_list = []\n  let x = following_data['followers']\n\n  if (Array.isArray(x) === false) {\n    post_list.push(current_user['username'])\n  }\n  else {\n    post_list = []\n    x.forEach((element) => { post_list.push(element) } )\n    post_list.push(current_user['username'])\n  }\n  update(ref(db, 'users/' +  following_data['username']), {\n      followers: post_list\n  });\n} \n\n\nfunction remove_follower(following_data) {\n  const db = getDatabase();\n  is_user_logged_on = true\n  let post_list = []\n  let x = current_user['followers']\n\n  if (Array.isArray(x) === false) {\n    post_list.push(current_user['username'])\n  }\n  else {\n    post_list = []\n    x.forEach((element) => { post_list.push(element) } )\n    post_list.push(current_user['username'])\n    post_list = post_list.filter(val => val !== current_user['username']);\n    //console.log(post_list)\n\n  }\n  update(ref(db, 'users/' +  following_data['username']), {\n      followers: post_list\n  });\n} \n\n\n\nfunction addPostToUser(file_name) {\n  const db = getDatabase();\n  is_user_logged_on = true\n  let post_list = []\n  let x = current_user['posts']\n\n  if (Array.isArray(x) === false) {\n    post_list.push(file_name)\n    //console.log(\"not a list\")\n    //console.log(current_user['posts'])\n  }\n  else {\n    post_list = []\n    x.forEach((element) => { post_list.push(element) } )\n    post_list.push(file_name)\n  }\n  update(ref(db, 'users/' +  current_user['username']), {\n      posts: post_list\n  });\n} \n\n\n\n\n\nfunction makeNewPost(title, image_name, description, file_name) {\n  const db = getDatabase();\n  is_user_logged_on = true\n  set(ref(db, 'posts/' +  file_name), {\n    title: title,\n    description: description,\n    image_name: image_name,\n    username: current_user['username']\n  });\n} \n\n\n\n\nfunction writeUserData(username, password) {\n  const db = getDatabase();\n  is_user_logged_on = true\n  set(ref(db, 'users/' +  username), {\n    username: username,\n    password: password,\n    followers: [''],\n    boards: [''],\n    following: [''],\n    saved_posts: [''],\n    posts: \"x\",\n    profile_image: \"default_profile_image.png\"\n\n  });\n} \n\n\nfunction return_current_user_data() {\n  return current_user\n}\n\n\nvar all_posts = []\n\nfunction return_all_posts() {\n  let db = getDatabase();\n  let getPosts = ref(db, 'posts/');\n  onValue(getPosts, (snapshot) => {\n    let data = snapshot.val();\n    all_posts = data\n  });\n}\n\n\nfunction return_all_post_data() {\n  return all_posts\n}\n\n\nfunction return_current_user_posts() {\n  let db = getDatabase();\n  let getPosts = ref(db, + \"users/\" + current_user['username'] + '/posts/');\n  onValue(getPosts, (snapshot) => {\n    let data = snapshot.val();\n    //console.log(data)\n    return data\n  });\n}\n\n\n\n\n\n\nfunction check_if_user_is_logged_on() {\n  if (is_user_logged_on === true) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\n\nfunction check_password(password) {\n  if (current_user != null) {\n    if (current_user['password'] === password) {\n      is_user_logged_on = true\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  else  {\n    return false\n  }\n}\n\nvar user_data = ''\n\n\nfunction check_if_username_is_taken(username) {\n  user_data = undefined\n  const db = getDatabase();\n  const getUsers = ref(db, 'users/' + username);\n  onValue(getUsers, (snapshot) => {\n    const data = snapshot.val();\n    user_data  = data\n});\n      if (user_data === null) {\n        return false\n      }\n      else {\n        if (user_data === undefined) {\n          return false\n        }\n        else {\n          return true\n        }\n      }\n}\n\nfunction get_user_data(username) {\n  const db = getDatabase();\n  const getUsers = ref(db, 'users/' + username);\n  onValue(getUsers, (snapshot) => {\n    const data = snapshot.val();\n    current_user = data\n  });\n}\n\n\nexport {save_post_to_user, unsave_post_to_user, get_all_users_data, remove_follower, add_follower, Unfollow_user, following_user, get_all_posts_data, get__public_user_data, download_post_image, return_all_post_data, return_current_user_posts, return_all_posts, addPostToUser, makeNewPost, update_profile_image, download_image, get_user_data, writeUserData, check_password, check_if_user_is_logged_on, return_current_user_data, Logout_user_in_firebase, check_if_username_is_taken, upload_file}","import '../styles/headerStyles.css';\nimport page_logo from '../images/logo.png'\nimport { Link } from 'react-router-dom';\nimport { check_if_user_is_logged_on, download_image, Logout_user_in_firebase, return_current_user_data} from './firebase';\nimport React, { useState } from 'react';\nimport {useNavigate} from 'react-router-dom';\n\n\nvar Sidebar = <div> </div>\n\n\nvar profile_picture = \"\"\n\nfunction profile_image(image) {\n    profile_picture = image\n}\n\n\nfunction return_profile_image() {\n    return profile_picture\n}\n\nfunction Header(Data) {\n    var func = Data.data.data\n    const [count, setCount] = useState(0);\n    setTimeout(() => {\n        setCount(count + 1)\n      }, 1000);\n\n    \n    if (check_if_user_is_logged_on() === true) {\n        Sidebar = User_logged_in\n    }\n    else {\n        Sidebar = Usernotloggedin\n    }\n\n\n    function User_logged_in() {\n        let data = return_current_user_data()\n        const navigate = useNavigate();\n        download_image(data['profile_image'])\n\n\n        function Logout_user() {\n            Logout_user_in_firebase()\n            navigate(\"/\")\n            window.location.reload()\n        }\n\n        function to_profile() {\n            func(data['username'])\n            navigate(\"/UserPublicProfile\")\n        }\n\n        function to_create_new_post() {\n            navigate(\"/makeNewPost\")\n        }\n\n        function to_front_page() {\n            navigate(\"/\")\n        }\n\n        return(\n            <div>\n\n                <Link to=\"/UserPersonalProfile\">\n                    <img alt=\"profile_image\" className=\"profile_image\" src={profile_picture} /> <h1 className=\"header_profile_name_text\"> {data['username']} </h1>\n                </Link>\n\n                <button onClick={() => Logout_user()} className=\"logout_button\"> logout </button> <button onClick={() => to_profile()} className=\"header_profile_button\"> profile </button>\n                <button onClick={() => to_create_new_post()} className=\"header_new_post_button\"> create post </button>\n                <button onClick={() => to_front_page()} className=\"header_home_button\"> home </button>\n            \n            </div>\n        )\n    }\n\n    function Usernotloggedin() {\n        return (\n            <div>\n    \n                <Link to=\"/Login\">\n                    <button className=\"login_button\"> Log in </button>\n                </Link>\n    \n                <Link to=\"/SignUp\">\n                    <button className=\"signup_button\"> Sign up </button>\n                </Link>\n\n\n                <div className=\"make_user_sign_in\"> \n                    <h1 className='make_user_sign_up_text'> Sign up to get your ideas today! </h1>\n\n                    <Link to=\"/Login\">\n                        <button className=\"force_user_signin_button\"> Log in </button>\n                    </Link>\n        \n                    <Link to=\"/SignUp\">\n                        <button className=\"force_user_login_button\"> Sign up </button>\n                    </Link>\n\n                </div> \n            \n            </div>\n        );\n    }\n\n\n    return (\n        <div className=\"loginHeader_banner\"> \n\n            <div className=\"header_line\"> </div>\n            <Link to=\"/\" >\n                <h1 className=\"logo_text\"> Videntium </h1>\n            </Link>\n\n            <Sidebar />\n      \n\n        </div>\n    );\n}\n\nexport { profile_image, return_profile_image }\n\nexport default Header","import loginHeader from \"./components/Header\";\nimport React from \"react\";\n\n\nvar is_user_logged_in = false\nvar Header = null\n\n\nfunction App(Data) {\n  if (is_user_logged_in === false) {\n      Header = loginHeader\n  }\n  else {\n    Header = <div> </div>\n  }\n\n\n  return (\n    <div >\n      <Header data={Data} />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\nimport '../styles/headerStyles.css';\nimport {useNavigate} from 'react-router-dom';\nimport { writeUserData, get_user_data, check_if_username_is_taken} from \"./firebase\";\n\n\n\nfunction check_for_invalid_characters( string ) {\n    if (string !== undefined) {\n        if (string.includes('.', '#', '$', '[', ']')) {\n            return true\n        }\n        else {\n            return false   \n        }\n    }\n    else {\n        return true\n    }\n}\n\n\n\n\nfunction SignUpUser() {\n    const [username, setUsername] = useState()\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    function Add_user_account() {\n\n        if (username != null && password != null && check_for_invalid_characters(username) === false) {\n\n            if (check_if_username_is_taken(username) === false) {\n            writeUserData(username, password)\n            get_user_data(username, password)\n            navigate('/')\n            }\n        }\n    \n       else {\n\n           if (check_for_invalid_characters(username) === true) {\n                document.getElementById('enter_username').placeholder=\"invalid characters\"\n                document.getElementById('enter_username').value = \"\"\n           }\n\n\n           if (check_for_invalid_characters(username) === false) {\n            if (check_if_username_is_taken(username) === true) {\n                document.getElementById('enter_username').placeholder=\"username taken\"\n                document.getElementById('enter_username').value = \"\"\n            }\n        }\n       }\n\n    }\n\n\n    return (\n        <div className=\"SignInUserBackground\">\n            <h1 style={{color: \"tomato\"}} > create account </h1>\n            \n            <h3 tyle={{color: \"tomato\"}} > enter username </h3>\n            <input id=\"enter_username\" onChange={event => setUsername(event.target.value)} className=\"input_for_sign_in\" placeholder=\"username\" type=\"email\" />\n\n\n            <h3 tyle={{color: \"tomato\"}} > enter password </h3>\n            <input onChange={event => setPassword(event.target.value)}  className=\"input_for_sign_in\" placeholder=\"password\" type=\"password\" />\n\n            <button onClick={() => Add_user_account()} className=\"confirm_buttom\" > confirm </button>\n\n        </div>\n    )\n}\n\n\nexport { check_for_invalid_characters }\nexport default SignUpUser\n\n","import React from \"react\";\nimport '../styles/headerStyles.css';\nimport { useState } from \"react\";\nimport {useNavigate} from 'react-router-dom';\nimport { check_password, get_user_data} from \"./firebase\";\nimport { check_for_invalid_characters } from './signUpUser'\n\n\nfunction LoginUser() {\n    const [username, setUsername] = useState()\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    function check_username_and_password() {\n        \n        if (username != null && password != null && check_for_invalid_characters(username) === false) {\n            get_user_data(username, password)\n            var x = check_password(password)\n\n\n            if (x === false) {\n                console.log('data not found or incorrect password')\n            }\n            if (x === true) {\n                navigate('/')\n            }\n        }\n \n        else {\n            if (check_for_invalid_characters(username) === true) {\n                 document.getElementById('enter_username').placeholder=\"invalid characters\"\n                 document.getElementById('enter_username').value = \"\"\n            }\n        }\n\n}\n\n\n    return (\n        <div className=\"SignInUserBackground\">\n            <h1> login </h1>\n            \n            <h3> enter username </h3>\n            <input id=\"enter_username\" onChange={event => setUsername(event.target.value)} className=\"input_for_sign_in\" placeholder=\"username\" type=\"email\" />\n\n\n            <h3> enter password </h3>\n            <input onChange={event => setPassword(event.target.value)}  className=\"input_for_sign_in\" placeholder=\"password\" type=\"password\" />\n\n            <button onClick={() => check_username_and_password()} className=\"confirm_buttom\" > confirm </button>\n\n        </div>\n    )\n}\n\n\nexport default LoginUser","import React, { useState } from \"react\";\nimport { download_post_image } from \"./firebase\";\nimport '../styles/profileStyles.css';\nimport { Link } from 'react-router-dom';\n\n\n\nfunction DisplayUser(data) {\n    const [image, setImage] = useState()\n    if (data !== undefined && data.data[0] !== undefined) {\n\n        if (data.data[0]['profile_image'] !== undefined && data.data[0] !== undefined) {\n            download_post_image(data.data[0]['profile_image']).then(\n                function(value) { \n                    setImage(value)\n                }\n            );\n        }\n    }\n\n    \n    if (data.data[0] !== undefined && data.data[1] !== undefined) {\n        \n\n        return ( \n            <div key={data.data[0]['profile_image']} className=\"user_post_background\">\n                <img className=\"user_image_size\" alt={image} src={image} />\n                <Link to=\"/UserPublicProfile\">\n                    <h1 onClick={() => data.data[1](data.data[0]['username'])} className=\"post_username_for_follower\">  {data.data[0]['username']} </h1>\n                </Link>\n            </div>\n        )\n    }\n    else {\n        return <div> </div>\n    }\n\n}\n\nexport default DisplayUser","import React, { useEffect, useState } from \"react\";\nimport { download_post_image, save_post_to_user, unsave_post_to_user, return_current_user_data } from \"./firebase\";\nimport '../styles/profileStyles.css';\nimport { Link } from 'react-router-dom';\n\nvar post_update = false\n\nfunction Post(data) {\n    const [saveButtonText, setSaveButtonText] = useState(\"save\")\n    const [image, setImage] = useState()\n    var is_saved = \"save\"\n    var user_data = return_current_user_data()\n    useEffect(() => setSaveButtonText(is_saved), [is_saved]);\n    if (data !== undefined && data.data[0] !== undefined) {\n\n        //console.log(data.data[2])\n        //console.log(user_data)\n        if (user_data !== undefined && user_data !== null && user_data !== \"\") {\n            if (user_data['saved_posts'].includes(data.data[2]) && post_update === false) {\n                is_saved = \"saved\"\n            }\n        }\n\n\n        if (data.data[0]['image_name'] !== undefined && data.data[0] !== undefined) {\n            download_post_image(data.data[0]['image_name']).then(\n                function(value) { \n                    setImage(value)\n                }\n            );\n        }\n    }\n\n\n\n    function save_or_unsave_post() {\n        console.log(data.data[0])\n        if (saveButtonText === \"saved\") {\n            setSaveButtonText(\"save\")\n            unsave_post_to_user(data.data[2])\n\n        }\n\n        else {\n            setSaveButtonText(\"saved\")\n            save_post_to_user(data.data[2])\n        }\n\n    }\n\n\n    if (data.data[0] !== undefined) {\n    return ( \n        <div key={data.data[0]['image_name']} className=\"post_background\">\n            <img className=\"image_size\" alt={image} src={image} />\n            <h1 className=\"post_title\"> {data.data[0]['title']} </h1>\n            <button onClick={() => save_or_unsave_post()} className=\"save_button\"> {saveButtonText} </button>\n            <Link to=\"/UserPublicProfile\">\n                <h1 onClick={() => data.data[1](data.data[0]['username'])} className=\"post_username\">  {data.data[0]['username']} </h1>\n            </Link>\n\n            <h1 className=\"post_description\"> {data.data[0]['description']} </h1>\n        </div>\n    )\n    }\n    else {\n        return <div> </div>\n    }\n\n}\n\nexport default Post","import React, { useState, useEffect } from \"react\";\nimport { return_current_user_data, upload_file, update_profile_image, check_if_user_is_logged_on, get__public_user_data} from \"./firebase\";\nimport { return_profile_image } from \"./Header\";\nimport { Link } from 'react-router-dom';\nimport DisplayUser from \"./DisplayUser\";\nimport Post from \"./Post\";\nimport { useNavigate } from \"react-router-dom\";\n\nvar user_posts = []\n\nfunction UserPersonalProfile (Data) {\n    var user_data = undefined\n    var all_posts = undefined\n    //console.log(Data)\n\n    const navigate = useNavigate();\n    var check = check_if_user_is_logged_on()\n    if (check === false) {\n        navigate('/')\n    }\n\n    if (Data.data['data'] !== undefined && Data.data['allPosts'] !== undefined) {\n        all_posts = Data.data['allPosts']\n        user_data = Data.data['data']\n        var func = Data.data['user_to_display'].data[1]\n    }\n\n\n    const [ButtonUploadClass, updateButtonUploadClass] = useState(\"HideButtonUpload\")\n\n    function update_profile_picture() {\n        var uploaded_image = document.getElementById(\"img\")\n        uploaded_image.click()\n        updateButtonUploadClass(\"ShowButtonUpload\")\n    }\n\n    function uploadUserImage() {\n        console.log(\"here for some reason\")\n        var uploaded_image = document.getElementById(\"img\")\n        console.log(uploaded_image)\n        if (uploaded_image !== undefined && uploaded_image !== null) {\n            if ( uploaded_image.files[0] !== undefined && uploaded_image.files[0] !== null) {\n                uploaded_image = document.getElementById(\"img\")\n                var file_name = Math.random().toString(36).substring(3,9)\n                upload_file(uploaded_image.files[0], file_name)\n                update_profile_image(file_name)\n                navigate(\"/UserPersonalProfile\")\n            }\n        }\n    }\n\n    let user = return_current_user_data()\n    var data\n\n\n    function UserImage() {\n        if (Data.data['allUsers'] !== undefined && Data.data['user_to_display'].data[1] !== undefined && user !== undefined && Data.data['allPosts'] !== undefined ) {\n            \n            if (Array.isArray(user['followers']) === false) {\n                user['followers'] = []\n            }\n\n            if (Array.isArray(user['following']) === false) {\n                user['following'] = []\n            }\n\n            if (Array.isArray(user['posts']) === false) {\n                user['posts'] = []\n            }\n\n            user['following'].reverse();\n            user['followers'].reverse();\n            user['posts'].reverse();\n\n\n            function arrayRemove(arr, value) { \n    \n                return arr.filter(function(ele){ \n                    return ele !== value; \n                });\n            }\n\n            user['following'] = arrayRemove(user['following'], \"\");\n            user['followers'] = arrayRemove(user['followers'], \"\");\n            user['saved_posts'] = arrayRemove(user['saved_posts'], \"\");\n\n            \n            return (\n                <div> \n                    <div className=\"UserImageBox\">\n\n                        <input onChange={() => uploadUserImage()} className=\"upload_image_button\" type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\" /> \n                        <img id=\"user_image\" className=\"user_profile_image\" alt=\"profile_image\" src={return_profile_image()} />\n                        <h1 className=\"profile_username\"> {user['username']} </h1>\n\n                    </div>\n\n\n                    <h1 style={{top: \"32%\", position: \"absolute\", left: \"47.2%\", color: \"tomato\"}}> Posts </h1>\n                    <div className=\"user_profile_posts\">\n\n                        {user['posts'].map(Element => \n                            <Post data={[ Data.data['allPosts'][Element], func, Element, user['saved_posts']]} />\n                        )}        \n\n                    </div>\n                        <Link to=\"/makeNewPost\">\n                            <button className=\"new_post_button\" > + </button>\n                        </Link>\n\n\n\n                    <h1 style={{top: \"86%\", position: \"absolute\", left: \"44.6%\", color: \"tomato\"}}> Saved Posts </h1>\n                    <div className=\"user_saved_profile_posts\">\n\n                        {user['saved_posts'].map(Element => \n                            <Post data={[ Data.data['allPosts'][Element], func, Element, user['saved_posts']]} />\n                        )}        \n\n                    </div>\n\n                    \n\n                        <h1 style={{top: \"141%\", position: \"absolute\", left: \"46%\", color: \"tomato\"}}> Followers </h1>\n                        <div className=\"user_followers\">\n\n                            {user['followers'].map(Element => \n                                <DisplayUser data={[ Data.data['allUsers'][Element], func, ]} />\n                            )}        \n\n                        </div>\n\n\n                        <h1 style={{top: \"168%\", position: \"absolute\", left: \"46%\", color: \"tomato\"}}> Following </h1>\n                        <div className=\"user_following\">\n\n                            {user['following'].map(Element => \n                                <DisplayUser data={[ Data.data['allUsers'][Element], func]} />\n                            )}        \n\n                        </div>\n\n                </div>\n            )\n\n        }\n        else {\n            return (\n                <div> </div>\n            )\n        }\n}\n\n    return(\n        <div>\n            <UserImage />\n        </div>\n    );\n}\n\n// <button onClick={() => uploadUserImage()} className={ButtonUploadClass}> upload </button>\n// <button className=\"profile_image_edit_button\" onClick={() => update_profile_picture()}> ✎ </button>\n\nexport default UserPersonalProfile\n\n","import React, { useState } from \"react\";\nimport '../styles/headerStyles.css';\nimport { addPostToUser, makeNewPost, upload_file, check_if_user_is_logged_on } from \"./firebase\";\nimport {useNavigate} from 'react-router-dom';\n\n\nfunction MakeAPost() {\n    const [title, SetTitle] = useState('')\n    const [description, SetDescription] = useState('')\n\n    const [file, setFile] = React.useState(null)\n        \n    const fileHandler = (e) => {\n        setFile(e.target.files[0])\n    }\n\n\n    const navigate = useNavigate();\n    var check = check_if_user_is_logged_on()\n    if (check === false) {\n        navigate('/')\n    }\n\n\n    function submitPost() {\n        var file_name = Math.random().toString(36).substring(3,20)\n        var image_name = Math.random().toString(30).substring(3,24)\n\n        var uploaded_image = document.getElementById(\"image\")\n        if ( title !== '' & description !== '' & uploaded_image !== '') {\n            upload_file(uploaded_image.files[0], image_name)\n            addPostToUser(file_name)\n            makeNewPost(title, image_name, description, file_name)\n            navigate('/')\n            navigate(\"/UserPersonalProfile\")\n        }\n    }\n\n\n    return (\n        <div> \n            <h1 style={{position: \"absolute\", color: \"tomato\", right: \"47%\", top:\"13% \"}}> create post </h1>\n            <div className=\"new_post_background\"> \n\n                <img id=\"myimage\" className=\"new_post_image\" src={file? URL.createObjectURL(file) : null} alt={file? file.name : null}/>\n\n                <input className=\"create_post_title_input\" type=\"text\" onChange={event => SetTitle(event.target.value)} placeholder=\"title\" /> \n\n                <input className=\"create_post_disc_input\" type=\"text\" onChange={event => SetDescription(event.target.value)} placeholder=\"description\" /> \n\n                <input onChange={fileHandler} className=\"custom-file-input\" type=\"file\" id=\"image\" accept=\"image/*\" />\n\n                <button className=\"submit_post\" onClick={() => submitPost()}> post </button>\n\n\n            </div>\n            \n        </div>\n    );\n}\n\n\nexport default MakeAPost","import React, { useState, useEffect } from \"react\";\nimport Post from \"./Post\";\nimport { return_current_user_data, download_post_image } from \"./firebase\";\nimport {useNavigate} from 'react-router-dom';\nimport '../styles/profileStyles.css'\nimport { following_user, Unfollow_user, add_follower, remove_follower, check_if_user_is_logged_on, get__public_user_data } from \"./firebase\";\nimport DisplayUser from \"./DisplayUser\";\nimport FetchAndDisplayUserData from \"./fetchAndDisplayUserData\";\n\n\nvar current_user = \"asd\"\nvar following_check = false\n\nfunction change_current_user(name) {\n    current_user = name\n    //console.log(name)\n}\n\nfunction get_current_user() {\n    return current_user\n}\n\n\nfunction UserPublicProfile(data) {    \n    const [image, setImage] = useState()\n    var user_data = undefined\n    var all_posts = undefined\n    var username = \"\"\n\n    \n\n    const navigate = useNavigate();\n    var check = check_if_user_is_logged_on()\n    if (check === false) {\n        navigate('/')\n    }\n\n\n    \n    \n    if (data.data['data'] !== undefined && data.data['allPosts'] !== undefined) {\n        all_posts = data.data['allPosts']\n        user_data = data.data['data']\n        var func = data.data['user_to_display'].data[1]\n        username = user_data['username']\n    }\n\n\n    let check_if_user = return_current_user_data()\n\n\n    \n    //check if user is following\n    // if user is following have unfollow action, else have follow action\n    \n    if (check_if_user['username'] === username) {\n        navigate(\"/UserPersonalProfile\")\n    }\n\n    const [buttonText, setButtonText] = useState(\"Follow\")\n\n\n    function follow_or_unfollow_user() {\n        \n        if (buttonText === \"Unfollow\") {\n            setButtonText(\"Follow\")\n            Unfollow_user(user_data['username'])\n            remove_follower(user_data)\n            navigate(\"/\")\n            navigate(\"/UserPublicProfile\")\n        }\n\n        else {\n            setButtonText(\"Unfollow\")\n            following_user(user_data['username'])\n            add_follower(user_data)\n            navigate(\"/\")\n            navigate(\"/UserPublicProfile\")\n        }\n\n    }\n\n    if (data.data['data'] !== undefined && data.data['allPosts'] !== undefined) {\n        download_post_image(user_data['profile_image']).then(\n            function(value) { \n            setImage(value)\n            }\n        );\n    }\n\n    var reverse = false\n  \n    function UserImage() {\n        if (data.data['data'] !== undefined && data.data['allPosts'] !== undefined && data.data['allUsers'] !== undefined && user_data !== undefined) {\n            \n            \n            if (user_data['followers'].includes(check_if_user['username'])){\n                setButtonText(\"Unfollow\")\n                console.log(\"its reseting\")\n            }\n\n            if (Array.isArray(user_data['followers']) === false) {\n                user_data['followers'] = []\n            }\n\n            if (Array.isArray(user_data['following']) === false) {\n                user_data['following'] = []\n            }\n\n            if (Array.isArray(user_data['posts']) === false) {\n                user_data['posts'] = []\n            }\n\n            if (reverse === false) {\n                user_data['posts'].reverse();\n                user_data['followers'].reverse();\n                user_data['following'].reverse();\n                reverse = true\n            }\n\n            function arrayRemove(arr, value) { \n    \n                return arr.filter(function(ele){ \n                    return ele !== value; \n                });\n            }\n\n            user_data['following'] = arrayRemove(user_data['following'], \"\");\n            user_data['followers'] = arrayRemove(user_data['followers'], \"\");\n            user_data['saved_posts'] = arrayRemove(user_data['saved_posts'], \"\");\n\n            return (\n                <div> \n                    <div className=\"UserImageBox\">\n                        <img className=\"user_profile_image\" alt=\"profile_image\" src={image} />\n                        <h1 className=\"profile_username\"> {user_data['username']} </h1>\n                        <button onClick={() => follow_or_unfollow_user()} className=\"public_follow_button\"> { buttonText } </button>\n\n                </div>\n                <h1 style={{top: \"32%\", position: \"absolute\", left: \"47.2%\", color: \"tomato\"}}> Posts </h1>\n                    <div className=\"user_profile_posts\">\n\n                        {user_data['posts'].map(Element => \n                            <Post data={[ data.data['allPosts'][Element], func, Element, user_data['saved_posts']]} />\n                        )}        \n\n                    </div>\n\n\n                    <h1 style={{top: \"86%\", position: \"absolute\", left: \"44.6%\", color: \"tomato\"}}> Saved Posts </h1>\n                    <div className=\"user_saved_profile_posts\">\n\n                        {user_data['saved_posts'].map(Element => \n                            <Post data={[ data.data['allPosts'][Element], func, Element, user_data['saved_posts']]} />\n                        )}        \n\n                    </div>\n                    \n                    <h1 style={{top: \"141%\", position: \"absolute\", left: \"46%\", color: \"tomato\"}}> Followers </h1>\n                    <div className=\"user_followers\">\n\n                        {user_data['followers'].map(Element => \n                            <DisplayUser data={[ data.data['allUsers'][Element], func]} />\n                        )}        \n\n                    </div>\n\n\n                    <h1 style={{top: \"168%\", position: \"absolute\", left: \"46%\", color: \"tomato\"}}> Following </h1>\n                    <div className=\"user_following\">\n\n                        {user_data['following'].map(Element => \n                            <DisplayUser data={[ data.data['allUsers'][Element], func]} />\n                        )}        \n\n                    </div>\n\n\n\n                </div>\n            )\n        }\n        else {\n            return ( <div>  </div> )\n        }\n\n    }\n\n    return(\n        <div>\n            <UserImage />\n        </div>\n    );\n}\n\n\nexport {change_current_user, get_current_user}\nexport default UserPublicProfile\n\n","import React, {useState, useEffect} from \"react\";\nimport UserPublicProfile from \"./userPublicProfile\";\nimport { get__public_user_data, get_all_posts_data, get_all_users_data } from \"./firebase\";\n\n\nconst FetchAndDisplayUserData = (user_to_display) => {\n    var name = user_to_display.data[0]\n    //console.log(name)\n    const [data, updateData] = useState();\n    const [allPosts, setAllPosts] = useState();\n    const [allUsers, SetAllUsers] = useState();\n\n    var sending\n\n    useEffect(() => {\n      const getData = async () => {\n\n        const json = await get__public_user_data(name).then(\n            function(value) {\n                updateData(value);\n                //console.log(value)\n            }\n        )\n        \n\n        const posts = await get_all_posts_data().then(\n            function(value) {\n                setAllPosts(value);\n                //console.log(value)\n            }\n        )\n\n        const users = await get_all_users_data().then(\n          function(value) {\n              SetAllUsers(value);\n              //console.log(value)\n          }\n      )\n\n      }\n      getData();\n    }, [user_to_display]);\n\n\n    return <UserPublicProfile data={sending={allPosts, data, user_to_display, allUsers}} />\n  }\n\n  export default FetchAndDisplayUserData","import React from \"react\";\nimport Post from \"./Post\";\nimport '../styles/profileStyles.css';\n\n\nfunction FrontPage(data){\n    //console.log(data)\n    var all_posts = []\n\n    if (data.data !== undefined) {\n        //console.log(data.data['all_posts'])\n        for (var i in data.data['all_posts']) {\n            all_posts.push(i)\n        }\n    }\n\n    if (data.data !== undefined && all_posts.length > 2) {\n        all_posts.reverse();\n        return (\n            <div className=\"front_page_posts\">\n\n                {all_posts.map(Element => \n\n                <Post data={ [ data.data['all_posts'][Element], data.data['func'].data, Element ] } />\n                )}         \n\n        </div>\n        )\n    \n    }\n    else {\n        return (\n            <div> </div>\n        )\n    }\n}\n\n\nexport default FrontPage","import React, { useState, useEffect } from \"react\";\nimport { get_all_posts_data } from \"./firebase\";\nimport FrontPage from \"./FrontPage\";\n\n\nconst GetAndDisplayFrontPageData = (data) => {\n    const [allPosts, setAllPosts] = useState();\n\n    useEffect(() => {\n      const getData = async () => {\n          \n        // eslint-disable-next-line\n        const posts = await get_all_posts_data().then(\n            function(value) {\n                setAllPosts(value);\n            }\n        )\n\n      }\n      getData();\n    }, []);\n  \n    return <FrontPage data={data={\"all_posts\": allPosts, \"func\": data}} />\n  }\n\n  export default GetAndDisplayFrontPageData","import React, { useState, useEffect } from \"react\";\nimport UserPersonalProfile from \"./UserPersonalProfile\";\nimport { get__public_user_data, get_all_posts_data, get_all_users_data } from \"./firebase\";\n\n\n\nconst GetDataForPersonalProfile = (user_to_display) => {\n    var name = user_to_display.data[0]\n    const [data, updateData] = useState();\n    const [allPosts, setAllPosts] = useState();\n    const [allUsers, SetAllUsers] = useState();\n    const [update, forceUpdate] = useState();\n    var sending\n\n    useEffect(() => {\n      const getData = async () => {\n\n        const json = await get__public_user_data(name).then(\n            function(value) {\n                updateData(value);\n                //console.log(value)\n            }\n        )\n        \n\n        const posts = await get_all_posts_data().then(\n            function(value) {\n                setAllPosts(value);\n                //console.log(value)\n            }\n        )\n\n        const users = await get_all_users_data().then(\n          function(value) {\n              SetAllUsers(value);\n              //console.log(value)\n          }\n      )\n\n      }\n      getData();\n    }, [user_to_display]);\n\n\n    return <UserPersonalProfile data={sending={allPosts, data, user_to_display, allUsers, forceUpdate}} />\n  }\n\n\n  export default GetDataForPersonalProfile","import { render } from \"react-dom\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport App from \"./App\";\nimport LoginUser from \"./components/login\";\nimport SignUpUser from \"./components/signUpUser\";\nimport UserPersonalProfile from \"./components/UserPersonalProfile\";\nimport MakeAPost from \"./components/MakeAPost\";\nimport FetchAndDisplayUserData from \"./components/fetchAndDisplayUserData\"\nimport GetAndDisplayFrontPageData from \"./components/GetAndDisplayFrontPageData\";\nimport { useState } from \"react\";\nimport GetDataForPersonalProfile from \"./components/getDataForPersonalProfile\";\n\n\nfunction Main() {\n  const [public_user, setPublicUser] = useState()\n  \n  function change_public_user(name) {\n    setPublicUser(name)\n    //console.log(name)\n  }\n\n\n  return (\n    <BrowserRouter>\n      <App data={change_public_user} />\n      <Routes>\n          <Route path=\"\" element={<GetAndDisplayFrontPageData data={change_public_user} />} />\n          <Route path=\"Login\" element={<LoginUser />} />\n          <Route path=\"signUp\" element={<SignUpUser />} />\n          <Route path=\"UserPersonalProfile\" element={<GetDataForPersonalProfile data={[public_user, change_public_user]}  />} />\n          <Route path=\"makeNewPost\" element={<MakeAPost />} />\n          <Route path=\"UserPublicProfile\" element={<FetchAndDisplayUserData data={[public_user, change_public_user]} />} />\n      </Routes>\n    </BrowserRouter>\n  )\n\n}\n\n\nrender(<Main/>, window.document.getElementById(\"root\") )"],"sourceRoot":""}